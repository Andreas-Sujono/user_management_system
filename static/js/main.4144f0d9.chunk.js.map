{"version":3,"sources":["components/Homepage/Table/Table.jsx","components/Homepage/Table/index.js","components/Homepage/Pagination/Pagination.jsx","components/Homepage/Pagination/index.js","components/UserDetail/index.js","components/UserDetail/UserDetail.jsx","components/LoadingBar/LoadingBar.jsx","components/LoadingBar/index.js","components/Homepage/index.js","components/Homepage/Homepage.jsx","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.js"],"names":["Table","props","className","cellSpacing","list","map","item","key","id","firstName","lastName","email","dob","toLocaleDateString","onClick","handleShowModal","handleEdit","type","Pagination","currentPage","maxPage","arr","Array","from","length","v","i","handleNavigate","_","idx","UserDetail","state","addZero","num","String","dateToString","date","yy","getFullYear","mm","getMonth","dd","getDate","validateEmail","test","toLowerCase","handleSubmit","e","preventDefault","detail","Date","parse","handleClose","handleChange","setState","target","name","value","prevProps","isPropsSame","Object","keys","this","forEach","open","isModalOpen","onClose","onSubmit","htmlFor","placeholder","required","onChange","Component","LoadingBar","color","height","width","Homepage","attendees","search","searchResult","showModal","isLoading","setLoading","loading","handleSearch","searchValue","setTimeout","filterUser","filter","re","RegExp","mockHTPPRequest","a","data","url","fetch","method","body","JSON","stringify","then","res","json","maxId","reduce","acc","Math","max","prevState","window","confirm","slice","ceil","page","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4144f0d9.chunk.js","sourcesContent":["import React from 'react';\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai'\n\nimport './style.scss'\n\nfunction Table(props) {\n    return (\n        <div className=\"homepage-table-container\">\n            <table cellSpacing=\"0\">\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Date of Birth</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {\n                        props.list.map(item => \n                            <tr key={item.id}>\n                                <td className=\"id\">{item.id}</td>\n                                <td className=\"first-name\">{item.firstName}</td>\n                                <td className=\"last-name\">{item.lastName}</td>\n                                <td className=\"email\">{item.email}</td>\n                                <td className=\"dob\">{item.dob.toLocaleDateString('en-us')}</td>\n                                <td className=\"action\">\n                                    <AiOutlineEdit className=\"icon edit-btn\" onClick={() => props.handleShowModal(item)}/>\n                                    <AiOutlineDelete className=\"icon delete-btn\" onClick={() => props.handleEdit({id:item.id, type:'delete'})}/>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;","import Table from './Table'\n\nexport default Table","import React from 'react';\n\nimport './style.scss'\n\nfunction Pagination(props) {\n    let {currentPage, maxPage} = props\n    let arr = Array.from({length: maxPage}, (v, i) => i)\n    return (\n        <div className=\"pagination\">\n            <ul>\n                {currentPage > 1 && <li onClick={() => props.handleNavigate(currentPage-1)}> &lt; </li>}\n                {\n                    arr.map((_,idx) => \n                        <li \n                            key={idx} \n                            className={`${currentPage === idx+1 ? 'active-page': ''}`}\n                            onClick={() => props.handleNavigate(idx+1)}\n                        > \n                            {idx+1} \n                        </li>\n                    )\n                }\n                {currentPage < maxPage && <li onClick={() => props.handleNavigate(currentPage+1)}> &gt; </li>}\n            </ul>\n        </div>\n    );\n}\n\nexport default Pagination;","import Pagination from './Pagination'\n\nexport default Pagination","import UserDetail from './UserDetail'\n\nexport default UserDetail","import React, {Component} from 'react';\nimport { Modal } from 'react-responsive-modal';\n\nimport 'react-responsive-modal/styles.css';\nimport './style.scss'\n\nclass UserDetail extends Component{\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        dob: '',\n    }\n\n    componentDidUpdate(prevProps){\n        let isPropsSame = true\n\n        Object.keys(this.props.detail || []).forEach(key => {\n            if(!prevProps.detail || !prevProps.detail[key]){\n                return isPropsSame = false\n            }\n            else if(prevProps.detail[key] !== this.props.detail[key])\n                isPropsSame = false\n        })\n        if(!isPropsSame){\n            const {firstName, lastName, email, dob} = this.props.detail\n            this.setState({\n                firstName:firstName || '',\n                lastName: lastName || '',\n                email: email || '',\n                dob: dob ? this.dateToString(dob): '',\n            })\n        }\n    }\n\n    addZero = (num) => num > 9 ? String(num) : `0${num}`\n\n    dateToString = (date) => {\n        let yy = date.getFullYear()\n        let mm = this.addZero(date.getMonth() + 1)\n        let dd = this.addZero(date.getDate())\n        return `${yy}-${mm}-${dd}`\n    }\n\n    validateEmail = (email) => {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const {firstName, lastName, email, dob} = this.state\n        if(!firstName || !lastName || !email || !dob || !this.validateEmail(email)) return\n\n        this.props.handleEdit({\n            id: this.props?.detail?.id || 'new',\n            type: this.props?.detail?.type || 'add',\n            firstName,\n            lastName,\n            email,\n            dob: new Date(Date.parse(dob))\n        })\n        this.props.handleClose()\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render(){\n        const {firstName, lastName, email, dob} = this.state\n        return (\n            <Modal\n              open={this.props.isModalOpen}\n              onClose={() => this.props.handleClose()}\n            >\n                <div className=\"UserDetail-page\">\n                    <h1>Edit Attendees</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"input-container\">\n                            <label htmlFor=\"firstName\">First Name*</label>\n                            <input \n                                id=\"firstName\" \n                                type=\"text\" \n                                placeholder=\"Enter your first name\" \n                                required\n                                value={firstName}\n                                name=\"firstName\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"input-container\">\n                            <label htmlFor=\"lastName\">Last Name*</label>\n                            <input \n                                id=\"lastName\" \n                                type=\"text\" \n                                placeholder=\"Enter your last name\" \n                                required\n                                value={lastName}\n                                name=\"lastName\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"input-container\">\n                            <label htmlFor=\"email\">email*</label>\n                            <input \n                                id=\"email\" \n                                type=\"email\" \n                                placeholder=\"Enter your email\" \n                                required\n                                value={email}\n                                name=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"input-container\">\n                            <label htmlFor=\"dob\">Date of Birth*</label>\n                            <input \n                                id=\"dob\" \n                                type=\"date\"\n                                required\n                                value={dob}\n                                name=\"dob\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <input type=\"submit\" value=\"Edit\"/>\n                    </form>\n                </div>\n            </Modal> \n        );\n    }\n\n\n}\n\nexport default UserDetail;","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nimport './style.scss'\n\nfunction LoadingBar(props) {\n    return (\n        <div className=\"loading-container\">\n            <ReactLoading \n                type=\"spin\" \n                color=\"black\" \n                height={80} \n                width={80} \n            />\n        </div>\n    );\n}\n\nexport default LoadingBar;","import LoadingBar from './LoadingBar'\n\nexport default LoadingBar","import Homepage from './Homepage'\n\nexport default Homepage","import React, {Component} from 'react';\nimport {FiSearch} from 'react-icons/fi'\n\nimport Table from './Table'\nimport Pagination from './Pagination'\nimport UserDetail from 'components/UserDetail'\nimport LoadingBar from 'components/LoadingBar'\n\nimport './style.scss'\n\nclass Homepage extends Component{\n    state={\n        attendees: [\n            {\n                id: 1,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            },\n            {\n                id: 2,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            },\n            {\n                id: 3,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            },\n            {\n                id: 4,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            },\n            {\n                id: 5,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            },\n            {\n                id: 6,\n                firstName: 'Andreas',\n                lastName: 'Sujono',\n                email: 'andreassujono@gmail.com',\n                dob: new Date()\n            }\n        ],\n        search: '',\n        searchResult: [],\n        currentPage: 1,\n        detail: {},\n        showModal: false,\n        isLoading: false\n    }\n\n    setLoading = (loading) => {\n        this.setState({\n            isLoading: loading\n        })\n    }\n\n    handleSearch = (e) => {\n        let searchValue = e.target.value\n        this.setState({search: searchValue})\n        setTimeout(this.filterUser(searchValue), 500)\n    }\n    filterUser = (searchValue) => {\n        const {attendees} = this.state\n        let searchResult = attendees.filter( item => {\n            var re = new RegExp(searchValue, \"i\");\n            return (re.test(item.id) || re.test(item.firstName) || re.test(item.lastName) || re.test(item.email))            \n        })\n        this.setState({searchResult})\n    }\n\n    mockHTPPRequest = async (type, data ={}) => {\n        let url = 'https://jsonplaceholder.typicode.com/posts' //default is GET\n        if(type === 'POST')\n            url = 'https://jsonplaceholder.typicode.com/posts' \n        else if(type === 'PUT')\n            url = 'https://jsonplaceholder.typicode.com/posts/1'\n        else if(type === 'DELETE')\n            url = 'https://jsonplaceholder.typicode.com/posts/1'\n        return await fetch(url, {\n            method: type,\n            body: JSON.stringify(data)\n        }).then(res => res.json())\n    }\n\n    handleEdit = async ({id, type, firstName, lastName, email, dob}) => {\n        this.setLoading(true)\n        const {attendees} = this.state\n        let maxId = attendees.reduce((acc,item) => Math.max(acc, item.id),0)\n        if(type === \"add\"){\n            let data = {id: maxId +1, firstName, lastName, email, dob}\n            let res = await this.mockHTPPRequest('POST', data)\n\n            this.setState( prevState => ({attendees: [...prevState.attendees, data]}))\n        }\n            \n        else if(type === 'edit'){\n            let data = {id, firstName, lastName, email, dob}\n            let res = await this.mockHTPPRequest('PUT', data)\n\n            this.setState( prevState => ({attendees: \n                prevState.attendees.map(item => {\n                    if(item.id === id)\n                        return data\n                    return item\n                })\n            }))\n\n        }\n        else if(type === 'delete'){\n            let confirm = window.confirm('Are you sure you want to delete this user?')\n            if(!confirm) return\n            let res = await this.mockHTPPRequest('DELETE', {id})\n\n            this.setState( prevState => ({attendees: \n                prevState.attendees.filter(item => item.id !== id)\n            }))\n        }\n        this.setLoading(false)\n    }\n\n    render(){\n        let maxContentPerPage = 5\n        const {attendees, search, searchResult, currentPage, detail, showModal, isLoading} = this.state\n\n        if(isLoading)\n            return <LoadingBar/>\n\n        return (\n            <div className=\"homepage\">\n                <h1>Attendees</h1>\n                <h2>These are attendees that have registered to your event</h2>\n    \n                <UserDetail\n                    detail={detail}\n                    isModalOpen={showModal}\n                    handleClose={() => this.setState({showModal:false})}\n                    handleEdit={this.handleEdit}\n                />\n    \n                <div className=\"search-bar\">\n                    <FiSearch className=\"icon\"/>\n                    <input \n                        type=\"search\" \n                        className=\"search-input\"\n                        placeholder=\"Search by id, first name, last name, or email\"\n                        value={search}\n                        onChange={this.handleSearch}\n                    />\n                </div>\n    \n                <div className=\"row\">\n                    <div className=\"total-attendees\">Total Attendees: <span>{attendees.length}</span></div>\n                    <button className=\"add-new-btn\" onClick={() => {\n                        this.setState({\n                            detail: {},\n                            showModal: true\n                        })\n                    }}>\n                        Add New Attendees\n                    </button>\n                </div>\n                <Table\n                    list={\n                        search ? searchResult : attendees.slice( (currentPage -1)*maxContentPerPage, (currentPage)*maxContentPerPage)\n                    }\n                    handleEdit={this.handleEdit}\n                    handleShowModal = {(detail) => {\n                        this.setState({\n                            detail: {...detail, type: 'edit'},\n                            showModal: true\n                        })\n                    }}\n                />\n                {\n                    !attendees.length && <div className=\"no-attendees\">No Attendee so far</div>\n                }\n                {\n                    (attendees.length && search && !searchResult.length) ? <div className=\"no-attendees\">Not Found</div> : <></>\n                }\n    \n                {\n                    !search && <Pagination\n                        currentPage={currentPage}\n                        maxPage={Math.ceil(attendees.length / maxContentPerPage)}\n                        handleNavigate = {page => this.setState({currentPage: page})}\n                    />\n                }\n                \n            </div>\n        );\n    }\n\n}\n\nexport default Homepage;","import React from 'react';\n\nimport Homepage from 'components/Homepage'\n\nimport './style.scss'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App'\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}