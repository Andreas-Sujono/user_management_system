{"version":3,"sources":["components/Homepage/Table/Table.jsx","components/Homepage/Table/index.js","components/Homepage/Pagination/Pagination.jsx","components/Homepage/Pagination/index.js","components/UserDetail/UserDetail.jsx","components/UserDetail/index.js","components/Homepage/Homepage.jsx","components/Homepage/index.js","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.js"],"names":["Table","props","className","cellSpacing","list","map","item","key","id","firstName","lastName","email","dob","toLocaleDateString","onClick","handleShowModal","handleEdit","type","Pagination","currentPage","maxPage","arr","Array","from","length","v","i","handleNavigate","_","idx","UserDetail","useState","setFirstName","setLastName","setEmail","dateofBirth","setDateofBirth","addZero","num","String","useEffect","detail","date","yy","getFullYear","mm","getMonth","dd","getDate","dateToString","open","isModalOpen","onClose","handleClose","onSubmit","e","preventDefault","Date","parse","htmlFor","placeholder","required","value","onChange","target","Homepage","attendees","setAttendees","search","setSearch","searchResult","setSearchResult","setCurrentPage","setDetail","showModal","setShowModal","filterUser","searchValue","filter","re","RegExp","test","mockHTPPRequest","data","Promise","resolve","a","maxId","reduce","acc","Math","max","res","newAttendees","window","confirm","setTimeout","slice","ceil","page","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0163a32d.chunk.js","sourcesContent":["import React from 'react';\nimport {AiOutlineDelete, AiOutlineEdit} from 'react-icons/ai'\n\nimport './style.scss'\n\nfunction Table(props) {\n    return (\n        <div className=\"homepage-table-container\">\n            <table cellSpacing=\"0\">\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Date of Birth</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {\n                        props.list.map(item => \n                            <tr key={item.id}>\n                                <td className=\"id\">{item.id}</td>\n                                <td className=\"first-name\">{item.firstName}</td>\n                                <td className=\"last-name\">{item.lastName}</td>\n                                <td className=\"email\">{item.email}</td>\n                                <td className=\"dob\">{item.dob.toLocaleDateString('en-us')}</td>\n                                <td className=\"action\">\n                                    <AiOutlineEdit className=\"icon edit-btn\" onClick={() => props.handleShowModal(item)}/>\n                                    <AiOutlineDelete className=\"icon delete-btn\" onClick={() => props.handleEdit({id:item.id, type:'delete'})}/>\n                                </td>\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;","import Table from './Table'\n\nexport default Table","import React from 'react';\n\nimport './style.scss'\n\nfunction Pagination(props) {\n    let {currentPage, maxPage} = props\n    let arr = Array.from({length: maxPage}, (v, i) => i)\n    return (\n        <div className=\"pagination\">\n            <ul>\n                {currentPage > 1 && <li onClick={() => props.handleNavigate(currentPage-1)}> &lt; </li>}\n                {\n                    arr.map((_,idx) => \n                        <li \n                            key={idx} \n                            className={`${currentPage === idx+1 ? 'active-page': ''}`}\n                            onClick={() => props.handleNavigate(idx+1)}\n                        > \n                            {idx+1} \n                        </li>\n                    )\n                }\n                {currentPage < maxPage && <li onClick={() => props.handleNavigate(currentPage+1)}> &gt; </li>}\n            </ul>\n        </div>\n    );\n}\n\nexport default Pagination;","import Pagination from './Pagination'\n\nexport default Pagination","import React, {useState, useEffect} from 'react';\nimport { Modal } from 'react-responsive-modal';\n\nimport 'react-responsive-modal/styles.css';\nimport './style.scss'\n\nfunction UserDetail(props) {\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [dateofBirth, setDateofBirth] = useState('')\n\n\n    const addZero = (num) => num > 9 ? String(num) : `0${num}`\n\n    const dateToString = (date) => {\n        let yy = date.getFullYear()\n        let mm = addZero(date.getMonth() + 1)\n        let dd = addZero(date.getDate())\n        return `${yy}-${mm}-${dd}`\n    }\n\n    useEffect(() => {\n        if(props.detail){\n            setFirstName(props.detail.firstName || '')\n            setLastName(props.detail.lastName || '')\n            setEmail(props.detail.email || '')\n            setDateofBirth(props.detail.dob ? dateToString(props.detail.dob ) : '')\n        }\n    }, [props.detail])\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.handleEdit({\n            id: props.detail.id || 'new',\n            type: props.detail.type || 'add',\n            firstName,\n            lastName,\n            email,\n            dob: new Date(Date.parse(dateofBirth))\n        })\n        props.handleClose()\n    }\n\n    return (\n        <Modal\n          open={props.isModalOpen}\n          onClose={() => props.handleClose()}\n        >\n            <div className=\"UserDetail-page\">\n                <h1>Edit Attendees</h1>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input \n                            id=\"firstName\" \n                            type=\"text\" \n                            placeholder=\"Enter your first name\" \n                            required\n                            value={firstName}\n                            onChange={e => setFirstName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input \n                            id=\"lastName\" \n                            type=\"text\" \n                            placeholder=\"Enter your last name\" \n                            required\n                            value={lastName}\n                            onChange={e => setLastName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"email\">email</label>\n                        <input \n                            id=\"email\" \n                            type=\"email\" \n                            placeholder=\"Enter your email\" \n                            required\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"input-container\">\n                        <label htmlFor=\"dob\">Date of Birth</label>\n                        <input \n                            id=\"dob\" \n                            type=\"date\"\n                            required\n                            value={dateofBirth}\n                            onChange={e => setDateofBirth(e.target.value)}\n                        />\n                    </div>\n                    <input type=\"submit\" value=\"Edit\"/>\n                </form>\n            </div>\n        </Modal>\n        \n    );\n}\n\nexport default UserDetail;","import UserDetail from './UserDetail'\n\nexport default UserDetail","import React, {useState} from 'react';\nimport {FiSearch} from 'react-icons/fi'\n\nimport Table from './Table'\nimport Pagination from './Pagination'\nimport UserDetail from 'components/UserDetail'\n\nimport './style.scss'\n\nfunction Homepage(props) {\n    const [attendees, setAttendees] = useState([\n        {\n            id: 1,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        },\n        {\n            id: 2,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        },\n        {\n            id: 3,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        },\n        {\n            id: 4,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        },\n        {\n            id: 5,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        },\n        {\n            id: 6,\n            firstName: 'Andreas',\n            lastName: 'Sujono',\n            email: 'andreassujono@gmail.com',\n            dob: new Date()\n        }\n    ])\n    const [search, setSearch] = useState('')\n    const [searchResult, setSearchResult] = useState([])\n    const [currentPage, setCurrentPage] = useState(1)\n    const [detail, setDetail] = useState({})\n    const [showModal, setShowModal] = useState(false)\n\n    const handleSearch = (e) => {\n        let searchValue = e.target.value\n        setSearch(searchValue)\n        setTimeout(filterUser(searchValue), 500)\n    }\n    const filterUser = (searchValue) => {\n        let searchResult = attendees.filter( item => {\n            var re = new RegExp(searchValue, \"i\");\n            return (re.test(item.id) || re.test(item.firstName) || re.test(item.lastName) || re.test(item.email))            \n        })\n        setSearchResult(searchResult)\n    }\n\n    const mockHTPPRequest = (type, data ={}) => new Promise( resolve => resolve(data))\n\n    const handleEdit = async ({id, type, firstName, lastName, email, dob}) => {\n        let maxId = attendees.reduce((acc,item) => Math.max(acc, item.id),0)\n        if(type === \"add\"){\n            let data = {id: maxId +1, type, firstName, lastName, email, dob}\n            let res = await mockHTPPRequest('POST', data)\n\n            setAttendees([...attendees, res])\n        }\n            \n        else if(type === 'edit'){\n            let data = {id, firstName, lastName, email, dob}\n            let res = await mockHTPPRequest('PUT', data)\n\n            let newAttendees = attendees.map(item => {\n                if(item.id === id)\n                    return res\n                return item\n            })\n\n            setAttendees(newAttendees)\n        }\n        else if(type === 'delete'){\n            let confirm = window.confirm('Are you sure you want to delete this user?')\n            if(!confirm) return\n            let res = await mockHTPPRequest('DELETE', {id})\n            let newAttendees = attendees.filter(item => item.id !== id)\n            setAttendees(newAttendees)\n        }\n    }\n\n    let maxContentPerPage = 5\n\n    return (\n        <div className=\"homepage\">\n            <h1>Attendees</h1>\n            <h2>These are attendees that have registered to your event</h2>\n\n            <UserDetail\n                detail={detail}\n                isModalOpen={showModal}\n                handleClose={() => setShowModal(false)}\n                handleEdit={handleEdit}\n            />\n\n            <div className=\"search-bar\">\n                <FiSearch className=\"icon\"/>\n                <input \n                    type=\"search\" \n                    className=\"search-input\"\n                    placeholder=\"Search by id, first name, last name, or email\"\n                    value={search}\n                    onChange={handleSearch}\n                />\n            </div>\n\n            <div className=\"row\">\n                <div className=\"total-attendees\">Total Attendees: <span>{attendees.length}</span></div>\n                <button className=\"add-new-btn\" onClick={() => {\n                    setDetail({})\n                    setShowModal(true)\n                }}>\n                    Add New Attendees\n                </button>\n            </div>\n            <Table\n                list={\n                    search ? searchResult : attendees.slice( (currentPage -1)*maxContentPerPage, (currentPage)*maxContentPerPage)\n                }\n                handleEdit={handleEdit}\n                handleShowModal = {(detail) => {\n                    setDetail({...detail, type: 'edit'})\n                    setShowModal(true)\n                }}\n            />\n            {\n                !attendees.length && <div className=\"no-attendees\">No Attendee so far</div>\n            }\n            {\n                (attendees.length && search && !searchResult.length) ? <div className=\"no-attendees\"> Not Found </div> : <></>\n            }\n\n            {\n                !search && <Pagination\n                    currentPage={currentPage}\n                    maxPage={Math.ceil(attendees.length / maxContentPerPage)}\n                    handleNavigate = {page => setCurrentPage(page)}\n                />\n            }\n            \n        </div>\n    );\n}\n\nexport default Homepage;","import Homepage from './Homepage'\n\nexport default Homepage","import React from 'react';\n\nimport Homepage from 'components/Homepage'\n\nimport './style.scss'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './App'\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}